number_to_symbol <- function(number) { # create a new function "number_to_symbol" (credit:https://github.com/dennis95stumm/bioinformatics_algorithms/blob/master/number_to_pattern.r)
  if (number == 0) return("A") # if the number equals to 0, return to A
  if (number == 1) return("C") # if the number equals to 1, return to C
  if (number == 2) return("G") # if the number equals to 2, return to G
  if (number == 3) return("T") # if the number equals to 3, return to T
} # end of function statement

number_to_pattern <- function(index, k) { # create a new function "number_to_pattern")
  if (k == 1) # if k equals 1
    return(number_to_symbol(index)) # return to index
  prefixIndex <- index %/% 4 # define "prefixIndex" as index divided by 4
  r <- index %% 4 # define "r" as "remainder" of index divided by 4
  symbol <- number_to_symbol(r) # define "symbol" as the number conversed from r by the function "number_to_symbol"
  return(paste(number_to_pattern(prefixIndex, k - 1), symbol, sep = "")) # return to concatenation of prefixpattern with symbol. paste: convert arguments to character strings and concatenation them (ref.https://www.rdocumentation.org/packages/base/versions/3.6.0/topics/paste)
} # end of function

